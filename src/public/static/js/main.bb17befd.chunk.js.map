{"version":3,"sources":["reducers/userReducer.js","reducers/navReducer.js","reducers/tableHeadReducer.js","reducers/mealReducer.js","reducers/foodReducer.js","reducers/chartDataReducer.js","reducers/modalsStatusReducer.js","reducers/modalsDataReducer.js","reducers/foodListReducer.js","store.js","actions/navActions.js","config.js","actions/mealActions.js","actions/modalActions.js","actions/modalDataActions.js","actions/chartDataActions.js","actions/userActions.js","components/Navigation.js","pages/WelcomePage.js","components/LoginForm.js","pages/LoginPage.js","components/EditMealModal.js","components/AddMealModal.js","actions/foodActions.js","utils/foodUtils.js","components/DietChart.js","components/FoodTable.js","components/MealTable.js","utils/utils.js","components/MealDateControl.js","pages/DietPage.js","pages/RegistrationPage.js","pages/ProfilePage.js","pages/FoodListPage.js","actions/foodListActions.js","components/CustomRouter.js","App.js","serviceWorker.js","index.js"],"names":["userReducer","state","action","undefined","user","status","type","payload","navReducer","to","text","tableHeadReducer","meal","food","mealReducer","meals","Object","toConsumableArray","foodReducer","foods","chartDataReducer","data","chart","modalsStatusReducer","modal","editMealModal","addMealModal","objectSpread","modalsDataReducer","editModalState","initData","foodId","name","meal_food","portion","foodListReducer","foodList","reducers","combineReducers","ui","nav","thead","modals","persistedState","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","setItem","stringify","getState","setNavAdmin","setNavUser","setNavDefault","url","concat","getMeals","rangeFrom","rangeTo","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","result","wrap","_context","prev","next","fetch","method","credentials","headers","Content-Type","then","r","json","sent","t0","stop","_x","apply","this","arguments","addMealModalHide","editMealModalHide","setEditModalState","chartDefault","getChartData","login","password","body","role","Navigation","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logoutHandler","bind","assertThisInitialized","event","preventDefault","logout","react_default","createElement","Row","Col","Navbar","bg","variant","sticky","Nav","className","map","elem","index","react_router_bootstrap_lib","key","exact","NavLink_default","userStatus","onClick","Component","mapDispatchToProps","_ref2","_callee2","_context2","clear","_x2","ConnectedNavigation","connect","WelcomePage","components_Navigation","history","LoginForm","loginHandler","loginError","value","push","classList","add","innerText","removeAttribute","_this2","Container","Form","Group","as","Label","column","sm","md","lg","Control","placeholder","ref","c","Button","connectedLoginForm","LoginPage","components_LoginForm","EditMealModal","handleClose","deleteFoodHandler","setStateToDefault","getFoodListByCategory","foodCategorySelectHandler","addFoodHandler","handleSave","isError","errorMessage","category","addedFoodList","selectedFoodItemIndex","arr","id","setState","foodCategory","filter","_this3","foodItem","length","oldFoods","mealName","_this4","Modal","show","onHide","onShow","Header","closeButton","Title","Body","editMealError","defaultValue","onChange","ListGroup","defaultActiveKey","Item","Footer","ConnectedEditMealModal","AddMealModal","createdAt","mealCreatedAt","moment","ConnectedAddMealModal","foodsDefault","getCalories","caloriesByFood","getFat","fatByFood","getCarbohydrate","carbohydrateByFood","intervalId","FoodTable","options","onRowClick","modifiedData","proteinByFood","protein","Math","round","Number","fat","carbohydrate","calories","react_bootstrap_table_lib","isKey","dataField","width","dataAlign","MealTable","createCustomSearchField","handleRowSelect","onRowDoubleClick","expanding","row","components_FoodTable","initEditMealModal","includes","isSelected","e","foodsResolved","selectRowProp","mode","bgColor","hideSelectColumn","clickToSelect","clickToExpand","onSelect","dateString","proteinReceived","fatReceived","carbohydrateReceived","caloriesReceived","Date","toLocaleString","expandRowBgColor","searchPosition","searchField","version","selectRow","expandableRow","expandComponent","hover","condensed","search","multiColumnSearch","pagination","ConnectedMealTable","MealDateControl","byDayButtonHandler","byWeekButtonHandler","byMonthButtonHandler","byAllTimeButtonHandler","getMealsByDate","mealDateFrom","startOf","format","mealDateTo","endOf","subtract","dateError","style","paddingRight","ButtonGroup","size","paddingLeft","ConnectedMealDateControl","DietChart","title","xAxis","categories","chartData","date","reverse","crosshair","yAxis","labels","opposite","series","color","dashStyle","marker","enabled","caloriesNorm","setInterval","clearInterval","highcharts_react_min_default","highcharts","Highcharts","ConnectedDietChart","DietPage","timeButtonHandler","handleRadio","handleDelete","param","dateFrom","disabled","currentMeal","target","fluid","components_AddMealModal","components_EditMealModal","components_MealDateControl","addMealModalShow","editMealModalShow","components_MealTable","components_DietChart","connectedDietPage","mealTableHead","foodTableHead","RegistrationPage","validateRegistrationData","handleSubmit","registrationData","loginIsValid","split","forEach","char","charCodeAt","confirmationPassword","age","weight","height","surname","gender","activityLevel","response","controlId","min","max","isSuccess","profileUpdateMessage","successMessage","ProfilePage","setTimeout","plaintext","readOnly","ConnectedProfilePage","FoodListPage","handleSortFilterInput","foodCategoryList","getFoodListData","categoryList","foodSort","columnTitle","sort","foodListDefault","ConnnectedFoodListPage","CustomRouter","Router","Route","path","component","lib_default","isAuthenticated","redirect","ConnectedACustomRouter","App","es","components_CustomRouter","createHistory","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb17befd.chunk.js","sourcesContent":["const userReducer = (state, action) => {\r\n    if (state === undefined) {\r\n        return { user: {},status: \"anonymous\" } \r\n    }\r\n    if (action.type === \"USER_LOGIN\") {\r\n        return {\r\n            user: action.payload,\r\n            status: \"logged_in\", \r\n        }\r\n    }\r\n    if (action.type === \"USER_LOGOUT\") {\r\n        return { \r\n            user: {},\r\n            status: \"anonymous\" }\r\n    } \r\n\r\n    if (action.type === \"USER_REJECTED\"){\r\n        return {\r\n            user: {},\r\n            status: \"rejected\"\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default userReducer","const navReducer = (state, action) => {\r\n    if (state === undefined || action.type === \"NAV_DEFAULT\") {\r\n        return [{ to: \"/registration\", text: \"Регистрация\" }, { to: \"/login\", text: \"Войти\" },]\r\n    }\r\n    if (action.type === \"NAV_ADMIN\") {\r\n        return [{ to: \"/diet\", text: \"Питание\" }, { to: \"/food\", text: \"Таблица продуктов\" }, {to: \"/profile\", text: \"Профиль\"}, { to: \"/admin\", text: \"Админка\" }]\r\n    }\r\n    if (action.type === \"NAV_USER\") {\r\n        return [{ to: \"/diet\", text: \"Питание\" }, { to: \"/food\", text: \"Таблица продуктов\" }, {to: \"/profile\", text: \"Профиль\"}]\r\n    }\r\n    return state\r\n}\r\n\r\nexport default navReducer","const tableHeadReducer = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            meal: [\"#\", \"Прием пищи\", \"Белки\", \"Жиры\", \"Углеводы\", \"Калории\",  \"Дата\"],\r\n            food: [\"#\", \"Продукт\", \"Белки\", \"Жиры\", \"Углеводы\", \"Калории\", \"Порция\"]\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport default tableHeadReducer","const mealReducer  = (state, action) => {\r\n    if (state === undefined || action.type === \"MEALS_DEFAULT\" ) \r\n        return {meals: [], status: \"DEFAULT\"}\r\n    if (action.type === \"MEALS_PENDING\" )\r\n        return {meals:state.meals, status: \"PENDING\"}\r\n    if (action.type === \"MEALS_RESOLVED\")\r\n        return {meals:[...action.payload], status: \"RESOLVED\"}\r\n    if (action.type === \"MEALS_ERROR\")\r\n        return {meals: state.meals, status: \"ERROR\"}       \r\n    return state\r\n}\r\n\r\nexport default mealReducer\r\n\r\n\r\n","const foodReducer  = (state, action) => {\r\n    if (state === undefined || action.type === \"FOODS_DEFAULT\" ) \r\n        return {foods: [], status: \"DEFAULT\"}\r\n    if (action.type === \"FOODS_PENDING\" )\r\n        return {foods:state.foods, status: \"PENDING\"}\r\n    if (action.type === \"FOODS_RESOLVED\")\r\n        return {foods:[...action.payload], status: \"RESOLVED\"}\r\n    if (action.type === \"FOODS_ERROR\")\r\n        return {foods: state.foods, status: \"ERROR\"}       \r\n    return state\r\n}\r\n\r\nexport default foodReducer","const chartDataReducer  = (state, action) => {\r\n    if (state === undefined || action.type === \"CHART_DEFAULT\" ) \r\n        return {data: [{}], status: \"DEFAULT\"}\r\n    if (action.type === \"CHART_DATA_PENDING\" )\r\n        return {data:state.chart, status: \"PENDING\"}\r\n    if (action.type === \"CHART_DATA_RESOLVED\")\r\n        return {data:[...action.payload], status: \"RESOLVED\"}\r\n    if (action.type === \"CHART_DATA_ERROR\")\r\n        return {data: state.chart, status: \"ERROR\"}       \r\n    return state\r\n}\r\n\r\nexport default chartDataReducer","const modalsStatusReducer = (state, action) => {\r\n    if (state === undefined || action.type === \"MODALS_STATUS_DEFAULT\"){\r\n        return {modal: { editMealModal: false, addMealModal: false }}\r\n    }\r\n    if (action.type === \"EDIT_MEAL_MODAL_SHOW\"){\r\n        return {modal: {...state.modal, editMealModal: true}}\r\n    }\r\n    if (action.type === \"EDIT_MEAL_MODAL_HIDE\"){\r\n        return {modal: {...state.modal, editMealModal: false}}\r\n    }\r\n    if (action.type === \"ADD_MEAL_MODAL_SHOW\"){\r\n        return {modal: {...state.modal, addMealModal: true}}\r\n    }\r\n    if (action.type === \"ADD_MEAL_MODAL_HIDE\"){\r\n        return {modal: {...state.modal, addMealModal: false}}\r\n    }\r\n    return state\r\n}\r\n\r\nexport default modalsStatusReducer","const modalsDataReducer = (state, action) => {\r\n    if (state === undefined || action.type === \"MODALS_DATA_DEFAULT\") {\r\n        return {\r\n            editModalState: {\r\n                initData: {food:[{foodId:0, name: \"\", meal_food:{portion:0}}]}\r\n            }\r\n        }\r\n    }\r\n    if (action.type === \"SET_EDIT_MODAL_STATE\") {\r\n        return {\r\n            editModalState: { ...state.editModalState, initData:action.payload }\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport default modalsDataReducer","const foodListReducer  = (state, action) => {\r\n    if (state === undefined || action.type === \"FOOD_LIST_DEFAULT\" ) \r\n        return {foodList: [], status: \"DEFAULT\"}\r\n    if (action.type === \"FOOD_LIST_PENDING\" )\r\n        return {foodList:state.foodList, status: \"PENDING\"}\r\n    if (action.type === \"FOOD_LIST_RESOLVED\")\r\n        return {foodList:[...action.payload], status: \"RESOLVED\"}\r\n    if (action.type === \"FOOD_LIST_ERROR\")\r\n        return {data: state.chart, status: \"ERROR\"}       \r\n    return state\r\n}\r\n\r\nexport default foodListReducer","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport navReducer from \"./reducers/navReducer\";\r\nimport tableHeadReducer from \"./reducers/tableHeadReducer\"\r\nimport mealReducer from \"./reducers/mealReducer\"\r\nimport foodReducer from \"./reducers/foodReducer\"\r\nimport chartDataReducer from \"./reducers/chartDataReducer\"\r\nimport modalsStatusReducer from \"./reducers/modalsStatusReducer\"\r\nimport modalsDataReducer from \"./reducers/modalsDataReducer\"\r\nimport foodListReducer from './reducers/foodListReducer';\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    ui: combineReducers({\r\n        nav: navReducer,\r\n        thead: tableHeadReducer,\r\n        modals: combineReducers({\r\n          status: modalsStatusReducer,\r\n          data: modalsDataReducer,\r\n        }) \r\n    }),\r\n   data: combineReducers({\r\n        meal: mealReducer,\r\n        food: foodReducer,\r\n        chart: chartDataReducer,\r\n        foodList: foodListReducer\r\n   })\r\n})\r\n\r\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\r\n\r\n\r\n\r\nconst store = createStore(reducers,  persistedState, composeWithDevTools(applyMiddleware(thunk)) )\r\n\r\nstore.subscribe(()=>{\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n  })\r\n\r\nexport default store","let setNavAdmin = () => ({ type: \"NAV_ADMIN\" })\r\nlet setNavUser = () => ({ type: \"NAV_USER\" })\r\nlet setNavDefault = () => ({ type: \"NAV_DEFAULT\" })\r\n\r\n\r\n\r\nexport { setNavAdmin, setNavUser, setNavDefault }","const protocol = \"http\";\r\nconst domen = \"localhost\";\r\nconst port = \"4000\";\r\nconst url = `${protocol}://${domen}:${port}/`\r\n\r\n\r\nexport default url","import url from \"../config\"\r\n\r\n\r\nlet mealsDefault = () => ({ type: \"MEALS_DEFAULT\" })\r\nlet mealsPending = () => ({ type: \"MEALS_PENDING\" })\r\nlet mealsResolved = meals => ({ type: \"MEALS_RESOLVED\", payload: meals })\r\nlet mealsError = () => ({ type: \"MEALS_ERROR\" })\r\n\r\n\r\nlet getMeals = (rangeFrom, rangeTo) =>\r\n    async dispatch => {\r\n        \r\n        await dispatch(mealsPending())\r\n        try {\r\n            let result = await fetch(`${url}meal?rangeFrom=${rangeFrom}&rangeTo=${rangeTo}`, {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(r => r.json())\r\n            await dispatch(mealsResolved(result))\r\n           \r\n        } catch (e) {\r\n            await dispatch(mealsError())\r\n        }\r\n    }\r\n\r\n\r\nexport { getMeals, mealsDefault }","\r\nlet modalsDefault = () => ({ type: \"MODALS_DEFAULT\" })\r\nlet addMealModalShow = () => ({ type: \"ADD_MEAL_MODAL_SHOW\" })\r\nlet addMealModalHide = () => ({ type: \"ADD_MEAL_MODAL_HIDE\" })\r\nlet editMealModalShow = () => ({ type: \"EDIT_MEAL_MODAL_SHOW\" })\r\nlet editMealModalHide = () => ({ type: \"EDIT_MEAL_MODAL_HIDE\"})\r\n\r\n\r\nexport {modalsDefault, editMealModalHide, editMealModalShow, addMealModalShow, addMealModalHide}","let modalsDataDefault = () => ({ type: \"MODALS_DATA_DEFAULT\" })\r\nlet setEditModalState = (meal) =>({type: \"SET_EDIT_MODAL_STATE\", payload:meal}) \r\n\r\nlet initEditMealModal = (meal) =>\r\n    async dispatch => {\r\n       await  dispatch(setEditModalState(meal))\r\n    }\r\n\r\nexport {modalsDataDefault, initEditMealModal}","import url from \"../config\"\r\n\r\n\r\n\r\nlet chartDefault = () => ({ type: \"CHART_DEFAULT\" })\r\nlet chartPending = () => ({ type: \"CHART_DATA_PENDING\" })\r\nlet chartResolved = chartData => ({ type: \"CHART_DATA_RESOLVED\", payload: chartData})\r\nlet chartError = () => ({ type: \"CHART_DATA_ERROR\" })\r\n\r\n\r\nlet getChartData = () =>\r\n    async dispatch => {\r\n\r\n        await dispatch(chartPending())\r\n        try {\r\n            let result = await fetch(`${url}chart`, {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(r => r.json())\r\n            await dispatch(chartResolved(result))\r\n\r\n        } catch (e) {\r\n            await dispatch(chartError())\r\n        }\r\n    }\r\n\r\n  \r\n\r\nexport { getChartData, chartDefault }","import url from \"../config\"\r\nimport { setNavAdmin, setNavUser, setNavDefault } from \"./navActions\"\r\nimport {mealsDefault} from \"./mealActions\"\r\nimport {modalsDefault} from \"./modalActions\"\r\nimport {modalsDataDefault} from \"./modalDataActions\"\r\nimport { chartDefault } from \"./chartDataActions\";\r\n\r\nlet userLoginPending = () => ({ type: \"USER_LOGIN_PENDING\" })\r\nlet userLogoutPending = () => ({ type: \"USER_LOGOUT_PENDING\" })\r\nlet userLogin = (user) => ({ type: \"USER_LOGIN\", payload: user })\r\nlet userLogout = () => ({ type: \"USER_LOGOUT\" })\r\nlet userRejected = () => ({ type: \"USER_REJECTED\" })\r\n\r\nlet login = (login, password) =>\r\n    async dispatch => {\r\n        dispatch(userLoginPending())\r\n        try {\r\n            let result = await fetch(`${url}login`, {\r\n                method: \"POST\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    \r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ login: login, password: password })\r\n            }).then(r => r.json())\r\n            await dispatch(userLogin(result))\r\n            if (result.role === \"user\"){\r\n                await dispatch(setNavUser())\r\n            } else {\r\n                await dispatch(setNavAdmin())\r\n            }\r\n            \r\n\r\n\r\n        }\r\n        catch (e) {\r\n            dispatch(userRejected())\r\n        }\r\n    }\r\n\r\nlet logout = () =>\r\n    async dispatch => {\r\n    \r\n        await dispatch(userLogoutPending())\r\n        try {\r\n\r\n            await fetch(`${url}logout`).then(r => r.json())\r\n            await dispatch(userLogout())\r\n            await dispatch(setNavDefault())\r\n            await dispatch(mealsDefault())\r\n            await dispatch(modalsDefault())\r\n            await dispatch(modalsDataDefault())\r\n            await dispatch(chartDefault())\r\n           await localStorage.clear() \r\n        } catch (e) {\r\n           \r\n        }\r\n    }\r\n\r\nexport { login, logout, userLogin, userLogout }","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\"\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {  Row, Col, Navbar, Nav } from 'react-bootstrap';\r\nimport NavLink from 'react-bootstrap/NavLink';\r\nimport {setNavAdmin, setNavUser, setNavDefault} from \"../actions/navActions\"\r\nimport {logout} from \"../actions/userActions\"\r\n\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.logoutHandler = this.logoutHandler.bind(this)\r\n    }\r\n\r\n    async logoutHandler(event){\r\n        event.preventDefault()\r\n        await this.props.logout()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n                        <Nav className=\"mr-auto\">\r\n                            {this.props.nav.map((elem, index) => \r\n                                <LinkContainer key={index} exact to={elem.to} >\r\n                                    <NavLink>\r\n                                        {elem.text}\r\n                                    </NavLink>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {this.props.userStatus === \"logged_in\" ? (\r\n                                <NavLink onClick={this.logoutHandler}>\r\n                                        Выйти\r\n                                    </NavLink>\r\n                            ) : null }\r\n                            \r\n                        </Nav>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({ userStatus: state.user.status, nav: state.ui.nav})\r\nlet mapDispatchToProps = {setNavAdmin, setNavDefault, setNavUser, logout}\r\nlet ConnectedNavigation =  connect(mapStateToProps, mapDispatchToProps)(Navigation)\r\nexport default ConnectedNavigation","import React, { Component } from 'react';\r\nimport Navigation from \"../components/Navigation\"\r\n\r\n\r\nclass WelcomePage extends Component  {\r\n\r\n        render(){\r\n            return (\r\n                <div className=\"page-container\">\r\n                    <Navigation history={this.props.history}/>\r\n                \r\n                    <div className=\"welcome-page-content\">\r\n                    <h1>Добро пожаловать! </h1>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        r\r\n    \r\n}\r\n\r\nexport default WelcomePage","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Button,  Form, } from 'react-bootstrap';\r\nimport {connect} from \"react-redux\"\r\nimport {login} from \"../actions/userActions\"\r\n \r\n\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.loginHandler = this.loginHandler.bind(this)\r\n        \r\n        this.state = {\r\n            loginError: false\r\n        }\r\n    }\r\n\r\n    async loginHandler(event) {\r\n        event.preventDefault()\r\n        await this.props.login(this.login.value, this.password.value)\r\n        if (this.props.status === \"logged_in\"){\r\n          \r\n            this.props.history.push(\"/diet\")\r\n        } else if (this.props.status === \"rejected\") {\r\n            this.loginError.classList.add(\"alert\", \"alert-danger\")\r\n            this.loginError.innerText = \"Неверный логин или пароль!\"\r\n        }\r\n    } \r\n\r\n    async componentWillUnmount(){\r\n        this.loginError.innerText = \"\"\r\n        this.loginError.removeAttribute(\"class\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"login-container\">\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={3} md={4} lg={4}>Имя пользователя:</Form.Label>\r\n                    <Col sm={9} md={8} lg={8}>\r\n                    <Form.Control type=\"text\" placeholder=\"Имя пользователя\" ref={c => this.login = c} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={3} md={4} lg={4}>Пароль</Form.Label>\r\n                    <Col sm={9} md={8} lg={8}>\r\n                    <Form.Control type=\"password\" placeholder=\"Введите пароль\" ref={c => this.password = c} />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" onClick={this.loginHandler}>\r\n                        Войти\r\n                  </Button>\r\n                  <div  role=\"alert\" className=\"profile-error\" ref={c => this.loginError = c}></div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = state => ({status: state.user.status})\r\nlet mapDispatchToProps = {login}\r\nlet connectedLoginForm = connect (mapStateToProps, mapDispatchToProps)(LoginForm) \r\nexport default connectedLoginForm","import React, { Component } from 'react';\r\nimport Navigation from \"../components/Navigation\"\r\nimport LoginForm from \"../components/LoginForm\"\r\n\r\nclass LoginPage extends Component {\r\n  \r\n    \r\n    \r\n    render() {\r\n        return ( \r\n            <div>\r\n            <Navigation history={this.props.history} />\r\n                <LoginForm history={this.props.history} />\r\n            </div>                        \r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage","import React, { Component } from 'react';\r\nimport { Modal, Button, Form, ListGroup } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\"\r\nimport { editMealModalHide } from \"../actions/modalActions\"\r\nimport { getMeals } from \"../actions/mealActions\"\r\nimport { getChartData } from \"../actions/chartDataActions\"\r\nimport url from \"../config\"\r\n\r\n\r\nclass EditMealModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.deleteFoodHandler = this.deleteFoodHandler.bind(this)\r\n        this.setStateToDefault = this.setStateToDefault.bind(this)\r\n        this.getFoodListByCategory = this.getFoodListByCategory.bind(this)\r\n        this.foodCategorySelectHandler = this.foodCategorySelectHandler.bind(this)\r\n        this.addFoodHandler = this.addFoodHandler.bind(this)\r\n        this.handleSave = this.handleSave.bind(this)\r\n\r\n        this.state = {\r\n            isError: false,\r\n            errorMessage: \"\",\r\n            category: [],\r\n            foodList: [],\r\n            addedFoodList: this.props.initData.food.map((food, index) => { return food }),\r\n            selectedFoodItemIndex: 0\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async setStateToDefault() {\r\n        this.setState({\r\n            category: await fetch(`${url}category`).then(r => r.json()).then(arr => arr.map((category) => category.category)),\r\n            foodList: [],\r\n            addedFoodList: this.props.initData.food.map((food, index) => { return { foodId: food.id, name: food.name, portion: food.meal_food.portion } }),\r\n            selectedFoodItemIndex: 0\r\n        })\r\n        this.getFoodListByCategory()\r\n        let cat = await fetch(`${url}category`).then(r => r.json()).then(arr => arr.map((category) => category.category))\r\n\r\n    }\r\n\r\n    async foodCategorySelectHandler() {\r\n        let foodList = await fetch(`${url}foods`, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ category: this.foodCategory.value })\r\n        }).then(r => r.json())\r\n\r\n        await this.setState({ ...this.state, foodList: foodList })\r\n\r\n    }\r\n\r\n    async getFoodListByCategory() {\r\n        let foodList = await fetch(`${url}foods`, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ category: this.state.category[0] })\r\n        }).then(r => r.json())\r\n        await this.setState({ ...this.state, foodList: foodList })\r\n    }\r\n\r\n    async handleClose() {\r\n        await this.setStateToDefault()\r\n        this.getFoodListByCategory()\r\n        await this.props.editMealModalHide()\r\n\r\n    }\r\n\r\n    async deleteFoodHandler() {\r\n       \r\n        await this.setState({\r\n            addedFoodList: this.state.addedFoodList.filter((food, index) => index !== this.state.selectedFoodItemIndex)\r\n        })\r\n        this.portion.value = \"\"\r\n       \r\n    }\r\n\r\n    async addFoodHandler() {\r\n        let arr = this.state.addedFoodList.filter((food, index) =>\r\n            food.foodId === this.state.foodList[this.foodItem.value].id\r\n        )\r\n        if (arr.length > 0) {\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage: \"Дубли продуктов не допускаются\"\r\n            })\r\n        } else if ((this.portion.value < 0)) {\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage: \"Размер порции не может быть отрицательным\"\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                isError: false,\r\n                addedFoodList: [\r\n                    ...this.state.addedFoodList,\r\n                    {\r\n                        foodId: this.state.foodList[this.foodItem.value].id,\r\n                        name: this.state.foodList[this.foodItem.value].name,\r\n                        portion: this.portion.value\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    async handleSave() {\r\n\r\n        let id = this.props.initData.id\r\n        let oldFoods = this.props.initData.food.map((foodItem, index) => foodItem.id)\r\n\r\n        \r\n\r\n        await fetch(`${url}${id}`, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                meal: { name: this.mealName.value },\r\n                foods: this.state.addedFoodList.map((food, index) => {\r\n                    return { foodId: food.foodId, portion: food.portion }\r\n                }),\r\n                oldFoods: oldFoods,\r\n\r\n            })\r\n        }).then(r => r)\r\n        await this.props.getMeals()\r\n        await this.props.getChartData()\r\n        await this.setStateToDefault()\r\n        this.props.editMealModalHide()\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await this.setStateToDefault()\r\n        await this.getFoodListByCategory()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Modal show={this.props.show} onHide={this.handleClose} onShow={this.setStateToDefault} >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Редактировать прием пищи\r\n                     </Modal.Title>\r\n\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n\r\n\r\n                    {this.state.isError === true ?\r\n                        (<div role=\"alert\" className=\"alert alert-danger\" ref={c => this.editMealError = c}> {this.state.errorMessage}</div>)\r\n                        : null\r\n                    }\r\n                    <Form>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label >Укажите название прием пищи</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Название приема пищи\" ref={c => this.mealName = c} defaultValue={this.props.initData.name} />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                            <Form.Label >Выберите категорию продуктов питания</Form.Label>\r\n                            <Form.Control as=\"select\" ref={c => this.foodCategory = c} onChange={this.foodCategorySelectHandler}>\r\n                                {this.state.category.map((category, index) => {\r\n                                    return <option key={index}>{category}</option>\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n\r\n                            <Form.Label>Выберите продукт </Form.Label>\r\n                            <Form.Control as=\"select\" ref={c => this.foodItem = c}>\r\n                                {this.state.foodList.map((food, index) => {\r\n                                    return <option key={index} value={index}>{food.name} </option>\r\n                                })}\r\n                            </Form.Control>\r\n\r\n                            <Form.Label>Размер порции, г.</Form.Label>\r\n                            <Form.Control type=\"number\" ref={c => this.portion = c} />\r\n\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n                    <ListGroup defaultActiveKey=\"0\">\r\n                        {this.state.addedFoodList.map((food, index) => {\r\n                            return <ListGroup.Item\r\n                                variant=\"success\"\r\n                                onClick={() => {\r\n                                   \r\n                                    this.setState({ selectedFoodItemIndex: index })\r\n\r\n                                }}\r\n                                key={index} action  >\r\n                                {`${index + 1}.  ${food.name} Размер порции:${food.portion}г.`}\r\n\r\n                            </ListGroup.Item>\r\n                        })}\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={this.handleClose}>Закрыть</Button>\r\n                    <Button onClick={this.addFoodHandler}>Добавить</Button>\r\n                    <Button onClick={this.deleteFoodHandler}>Удалить</Button>\r\n                    <Button onClick={this.handleSave}>Сохранить</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    show: state.ui.modals.status.modal.editMealModal,\r\n    initData: state.ui.modals.data.editModalState.initData\r\n})\r\nlet mapDispatchToProps = { editMealModalHide, getMeals, getChartData }\r\nlet ConnectedEditMealModal = connect(mapStateToProps, mapDispatchToProps)(EditMealModal)\r\n\r\n\r\nexport default ConnectedEditMealModal\r\n\r\n","import React, { Component } from 'react';\r\nimport { Modal, Button, Form, ListGroup } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\"\r\nimport { addMealModalHide } from \"../actions/modalActions\"\r\nimport { getMeals } from \"../actions/mealActions\"\r\nimport {getChartData} from \"../actions/chartDataActions\"\r\nimport url from \"../config\"\r\nimport moment from \"moment/moment\"\r\n\r\nclass AddMealModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleSave = this.handleSave.bind(this)\r\n        this.foodCategorySelectHandler = this.foodCategorySelectHandler.bind(this)\r\n        this.addFoodHandler = this.addFoodHandler.bind(this)\r\n        this.deleteFoodHandler = this.deleteFoodHandler.bind(this)\r\n        this.getFoodListByCategory = this.getFoodListByCategory.bind(this)\r\n        this.setStateToDefault = this.setStateToDefault.bind(this)\r\n       \r\n        this.state = {\r\n            isError: false,\r\n            errorMessage: \"\",\r\n            category: [],\r\n            foodList: [],\r\n            addedFoodList: [],\r\n            selectedFoodItemIndex: 0\r\n        }\r\n\r\n    }\r\n\r\n    async setStateToDefault() {\r\n        this.setState({\r\n            category: await fetch(`${url}category`).then(r => r.json()).then(arr => arr.map((category) => category.category)),\r\n            foodList: [],\r\n            addedFoodList: [],\r\n            selectedFoodItemIndex: 0\r\n        })\r\n    }\r\n\r\n    async deleteFoodHandler() {\r\n        await this.setState({\r\n            ...this.state,\r\n            addedFoodList: this.state.addedFoodList.filter((food, index) => index !== this.state.selectedFoodItemIndex)\r\n        })\r\n    }\r\n\r\n    async getFoodListByCategory() {\r\n        let foodList = await fetch(`${url}foods`, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ category: this.state.category[0] })\r\n        }).then(r => r.json())\r\n        await this.setState({ ...this.state, foodList: foodList })\r\n    }\r\n\r\n    async foodCategorySelectHandler() {\r\n        let foodList = await fetch(`${url}foods`, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ category: this.foodCategory.value })\r\n        }).then(r => r.json())\r\n       \r\n        await this.setState({ ...this.state, foodList: foodList })\r\n\r\n    }\r\n    async addFoodHandler() {\r\n        let arr = this.state.addedFoodList.filter((food, index) =>\r\n            food.foodId === this.state.foodList[this.foodItem.value].id\r\n        )\r\n        if (arr.length > 0) {\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage: \"Дубли продуктов не допускаются\"\r\n            })\r\n        } else if ((this.portion.value < 0)) {\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage: \"Размер порции не может быть отрицательным\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                addedFoodList: [\r\n                    ...this.state.addedFoodList,\r\n                    {\r\n                        foodId: this.state.foodList[this.foodItem.value].id,\r\n                        name: this.state.foodList[this.foodItem.value].name,\r\n                        portion: this.portion.value\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    async handleClose() {\r\n        await this.setStateToDefault()\r\n        this.getFoodListByCategory()\r\n        await this.props.addMealModalHide()\r\n    }\r\n\r\n    async handleSave() {\r\n        await fetch(`${url}meal`, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                meal: { name: this.mealName.value },\r\n                foods: this.state.addedFoodList.map((food, index) => {\r\n                    return { foodId: food.foodId, portion: food.portion }\r\n                   \r\n                }),\r\n                createdAt: this.mealCreatedAt.value === \"\" ? moment() : this.mealCreatedAt.value \r\n\r\n            })\r\n        }).then(r => r.json())\r\n        await this.props.getMeals()\r\n        await this.props.getChartData()\r\n        await this.setStateToDefault()\r\n        this.props.addMealModalHide()\r\n    }\r\n\r\n   async componentWillMount() {\r\n        await this.setStateToDefault()\r\n        await this.getFoodListByCategory()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.show} onHide={this.handleClose} >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Добавить прием пищи\r\n                     </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n\r\n                {this.state.isError === true ?\r\n                    (<div role=\"alert\" className=\"alert alert-danger\"  ref={c => this.editMealError = c}> {this.state.errorMessage}</div>)\r\n                    : null\r\n                }\r\n\r\n                    <Form>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label >Укажите название прием пищи</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Название приема пищи\" ref={c => this.mealName = c} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label >Укажите дату прием пищи</Form.Label>\r\n                            <Form.Control \r\n                            type=\"datetime-local\"\r\n                             ref={c => this.mealCreatedAt = c} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label >Выберите категорию продуктов питания</Form.Label>\r\n                            <Form.Control as=\"select\" ref={c => this.foodCategory = c} onChange={this.foodCategorySelectHandler}>\r\n                                {this.state.category.map((category, index) => {\r\n                                    return <option key={index}>{category}</option>\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n\r\n                            <Form.Label>Выберите продукт </Form.Label>\r\n                            <Form.Control as=\"select\" ref={c => this.foodItem = c}>\r\n                                {this.state.foodList.map((food, index) => {\r\n                                    return <option key={index} value={index}>{food.name} </option>\r\n                                })}\r\n                            </Form.Control>\r\n\r\n                            <Form.Label>Размер порции, г.</Form.Label>\r\n                            <Form.Control type=\"number\" ref={c => this.portion = c} />\r\n\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n\r\n                    <ListGroup defaultActiveKey=\"0\">\r\n                        {this.state.addedFoodList.map((food, index) => {\r\n                            return <ListGroup.Item\r\n                                action\r\n                                variant=\"success\"\r\n                                onClick={() => this.setState({ ...this.state, selectedFoodItemIndex: index })}\r\n                                key={index} >\r\n                                {`${index + 1}.  ${food.name} Размер порции:${food.portion}г.`}\r\n\r\n                            </ListGroup.Item>\r\n                        })}\r\n                    </ListGroup>\r\n\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={this.handleClose}>Закрыть</Button>\r\n                    <Button onClick={this.addFoodHandler}>Добавить</Button>\r\n                    <Button onClick={this.deleteFoodHandler}>Удалить</Button>\r\n                    <Button onClick={this.handleSave}>Сохранить</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    show: state.ui.modals.status.modal.addMealModal,\r\n   \r\n})\r\nlet mapDispatchToProps = { addMealModalHide,  getMeals, getChartData }\r\nlet ConnectedAddMealModal = connect(mapStateToProps, mapDispatchToProps)(AddMealModal)\r\n\r\nexport default ConnectedAddMealModal","\r\n\r\nlet foodsDefault = () => ({ type: \"FOODS_DEFAULT\" })\r\nlet foodsResolved = foods => ({ type: \"FOODS_RESOLVED\", payload: foods })\r\n\r\n\r\n\r\nexport {foodsResolved,  foodsDefault, }","function  getCalories (caloriesByFood, portion) {\r\n    return caloriesByFood / 100  * portion\r\n}\r\n\r\nfunction  getProtein (proteinByFood, portion) {\r\n    return Number(proteinByFood) / 100  * portion\r\n}\r\n\r\nfunction  getFat (fatByFood, portion) {\r\n    return fatByFood / 100  * portion\r\n}\r\n\r\nfunction  getCarbohydrate (carbohydrateByFood, portion) {\r\n    return carbohydrateByFood / 100  * portion\r\n}\r\n\r\nexport {getCalories, getProtein, getFat, getCarbohydrate}","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\"\r\nimport {getChartData, chartDefault} from \"../actions/chartDataActions\"\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\n\r\nlet intervalId\r\n\r\nclass DietChart extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            options:{\r\n                title: {\r\n                    text: 'Калории и БЖУ'\r\n                },\r\n                xAxis: [{\r\n                    categories:this.props.chartData.map((data) => data.date).reverse(),\r\n                    crosshair: true\r\n                }],\r\n                yAxis: [{\r\n                    labels: {\r\n                        format: '{value} кал.'\r\n                    },\r\n                    title: {\r\n                        text: 'Калории'\r\n                    }\r\n                },\r\n                {\r\n                    labels:{\r\n                        format:'{value} г.'\r\n                    },\r\n                    title: {\r\n                        text: 'БЖУ'\r\n                    },\r\n                    opposite: true\r\n                },\r\n                \r\n            \r\n                ],\r\n                series: [\r\n                    {\r\n                        name:\"Калории\",\r\n                        type: \"spline\",\r\n                        yAxis: 0,\r\n                        data: this.props.chartData.map((data) => data.calories).reverse()\r\n                    },\r\n                    {\r\n                        name:\"Норма калорий\",\r\n                        color: '#FF0040',\r\n                        type: \"spline\",\r\n                        yAxis: 0,\r\n                        dashStyle: \"shortdot\",\r\n                        marker:{\r\n                            enabled: false,\r\n                        },\r\n                        data: this.props.chartData.map((data) => data.caloriesNorm)\r\n                    },\r\n                    {\r\n                        name:\"Белки\",\r\n                        color: '#02FB6D',\r\n                        type: \"spline\",\r\n                        yAxis: 1,\r\n                        data:this.props.chartData.map((data) => data.protein).reverse()\r\n                    },\r\n                    {\r\n                        name:\"Жиры\",\r\n                        color:\"#F4F40D\",\r\n                        type: \"spline\",\r\n                        yAxis: 1,\r\n                        data: this.props.chartData.map((data) => data.fat).reverse()\r\n                    },\r\n                    {\r\n                        name:\"Углеводы\",\r\n                        color:\"#857B7B\",\r\n                        type: \"spline\",\r\n                        yAxis: 1,\r\n                        data: this.props.chartData.map((data) => data.carbohydrate).reverse()\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    \r\n  \r\n   async componentWillMount(){ \r\n       intervalId =  setInterval( () =>{\r\n            this.setState({\r\n                options: {\r\n                    xAxis:{\r\n                        categories:this.props.chartData.map((data) => data.date).reverse()\r\n                    },\r\n                    series: [\r\n                        {\r\n                            data: this.props.chartData.map((data) => data.calories).reverse()\r\n                        },\r\n                        {\r\n                            data: this.props.chartData.map((data) => data.caloriesNorm)\r\n                        },\r\n                        {\r\n                            data: this.props.chartData.map((data) => data.protein).reverse()\r\n                        },\r\n                        {\r\n                            data: this.props.chartData.map((data) => data.fat).reverse()\r\n                        },\r\n                        {\r\n                            data: this.props.chartData.map((data) => data.carbohydrate).reverse()\r\n                        },\r\n    \r\n                    ]\r\n                } \r\n            })\r\n        } , 3000)\r\n       \r\n        \r\n    }\r\n\r\n    async componentWillUnmount(){\r\n        clearInterval(intervalId)\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({chartData: state.data.chart.data})\r\nlet mapDispatchToProps = {getChartData, chartDefault}\r\nlet ConnectedDietChart = connect(mapStateToProps, mapDispatchToProps)(DietChart)\r\nexport default ConnectedDietChart","import React, { Component } from 'react';\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table'\r\nimport { getCalories, getProtein, getFat, getCarbohydrate } from \"../utils/foodUtils\"\r\n\r\nclass FoodTable extends Component {\r\n    \r\n\r\n    \r\n    render() {\r\n\r\n        const options = {\r\n            onRowClick: this.onRowClick,\r\n            \r\n        }\r\n        const modifiedData = this.props.data.map((food, index) => {\r\n            let modifiedFood = {\r\n                ...food,\r\n                portion: food.meal_food.portion,\r\n                index: index + 1,\r\n                protein: Math.round((getProtein)(food.protein, food.meal_food.portion) * 100) / 100 ,\r\n                fat: Math.round((getFat)(food.fat, food.meal_food.portion) * 100) / 100 ,\r\n                carbohydrate: Math.round((getCarbohydrate)(food.carbohydrate, food.meal_food.portion) * 100) / 100 ,\r\n                calories: Math.round((getCalories)(food.calories, food.meal_food.portion) * 100) / 100 \r\n            }\r\n            return modifiedFood\r\n        })\r\n        \r\n\r\n        return (\r\n            <BootstrapTable data={modifiedData} options={options} >\r\n                <TableHeaderColumn isKey dataField=\"index\" width=\"50px\" dataAlign=\"center\" >№</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"name\" width=\"20%\" dataAlign=\"center\">Название продукта</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"protein\" width=\"10%\" dataAlign=\"center\">Белки, г.</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"fat\" width=\"10%\" dataAlign=\"center\">Жиры, г.</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"carbohydrate\" width=\"10%\" dataAlign=\"center\">Углеводы, г.</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"calories\" width=\"10%\" dataAlign=\"center\">Калории</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"portion\" width=\"10%\" dataAlign=\"center\">Порция, г.</TableHeaderColumn>\r\n            </BootstrapTable>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FoodTable","import React, { Component } from 'react';\r\nimport { BootstrapTable, TableHeaderColumn,  SearchField } from 'react-bootstrap-table'\r\nimport { getDate } from \"../utils/utils\"\r\nimport FoodTable from \"./FoodTable\"\r\nimport { foodsDefault, foodsResolved } from \"../actions/foodActions\"\r\nimport { initEditMealModal } from \"../actions/modalDataActions\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nclass MealTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleRowSelect = this.handleRowSelect.bind(this)\r\n        this.onRowClick = this.onRowClick.bind(this)\r\n        this.onRowDoubleClick = this.onRowDoubleClick.bind(this)\r\n        this.state = {\r\n            expanding: []\r\n        }\r\n    }\r\n\r\n      createCustomSearchField = (props) => {\r\n        return (\r\n          <SearchField\r\n           className=\"meal-table-seach-field\"\r\n            placeholder={ \"Поиск\"}/>\r\n        );\r\n      }\r\n\r\n    expandComponent(row) {\r\n        return <FoodTable data={row.food}></FoodTable>\r\n    }\r\n\r\n\r\n    onRowClick(row) {\r\n        this.props.initEditMealModal(row)\r\n    }\r\n\r\n    onRowDoubleClick(row) {\r\n        if (this.state.expanding.includes(row.index)) {\r\n            this.setState({\r\n                expanding: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                expanding: [row.index]\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleRowSelect(row, isSelected, e) {\r\n        \r\n        this.props.foodsResolved(row.food)\r\n    }\r\n\r\n\r\n    render() {\r\n        const selectRowProp = {\r\n            mode: 'radio',\r\n            bgColor: '#A9E2F3', \r\n            hideSelectColumn: true,  \r\n            clickToSelect: true,  \r\n            clickToExpand: false,\r\n            onSelect: this.handleRowSelect,\r\n\r\n        };\r\n\r\n        const modifiedData = this.props.data.map((meal, index) => {\r\n            let modifiedMeal = {\r\n                ...meal,\r\n                proteinReceived: Math.round(meal.proteinReceived * 100) / 100,\r\n                fatReceived: Math.round(meal.fatReceived * 100) / 100,\r\n                carbohydrateReceived: Math.round(meal.carbohydrateReceived * 100) / 100,\r\n                caloriesReceived: Math.round(meal.caloriesReceived * 100) / 100,\r\n                createdAt: (getDate)(meal.createdAt),\r\n                index: index + 1\r\n            }\r\n            return modifiedMeal\r\n        })\r\n\r\n        const options = {\r\n            expandRowBgColor: \"#F8E6E0\",\r\n            onRowClick: this.onRowClick,\r\n            onRowDoubleClick: this.onRowDoubleClick,\r\n            expanding: this.state.expanding,\r\n            searchPosition: \"left\",\r\n            searchField: this.createCustomSearchField\r\n\r\n        }\r\n        return (\r\n            <BootstrapTable data={modifiedData} version=\"4\" selectRow={selectRowProp} options={options}\r\n                expandableRow={() => { return true }}\r\n                expandComponent={this.expandComponent}\r\n                hover\r\n                condensed\r\n                search={true}\r\n                multiColumnSearch={true}\r\n                pagination\r\n\r\n\r\n            >\r\n                <TableHeaderColumn isKey dataField=\"index\" width=\"5%\" dataAlign=\"center\">№</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"name\" width=\"150px\" dataAlign=\"center\">Имя</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"proteinReceived\" width=\"10%\" dataAlign=\"center\">Белки, г.</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"fatReceived\" width=\"10%\" dataAlign=\"center\">Жиры, г.</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"carbohydrateReceived\" width=\"10%\" dataAlign=\"center\">Углеводы, г.</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"caloriesReceived\" width=\"10%\" dataAlign=\"center\">Калории</TableHeaderColumn>\r\n                <TableHeaderColumn dataField=\"createdAt\" width=\"150px\" dataAlign=\"center\">Дата</TableHeaderColumn>\r\n            </BootstrapTable>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = state => ({})\r\nlet mapDispatchToProps = ({ foodsDefault, foodsResolved, initEditMealModal })\r\nlet ConnectedMealTable = connect(mapStateToProps, mapDispatchToProps)(MealTable)\r\nexport default ConnectedMealTable","const getDate = (dateString) =>{\r\n    let date = new Date(dateString)\r\n    return date.toLocaleString(\"ru\")\r\n}\r\n\r\nexport {getDate}","import React, { Component } from 'react';\r\nimport {  Row,  Button, Form, ButtonGroup } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\"\r\nimport { getMeals } from \"../actions/mealActions\"\r\nimport moment from \"moment/moment\"\r\n\r\nimport \"../App.css\"\r\n\r\n\r\nclass MealDateControl extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.byDayButtonHandler = this.byDayButtonHandler.bind(this)\r\n        this.byWeekButtonHandler = this.byWeekButtonHandler.bind(this)\r\n        this.byMonthButtonHandler = this.byMonthButtonHandler.bind(this)\r\n        this.byAllTimeButtonHandler = this.byAllTimeButtonHandler.bind(this)\r\n        this.getMealsByDate = this.getMealsByDate.bind(this)\r\n    }\r\n\r\n\r\n    byDayButtonHandler() {\r\n        this.mealDateFrom.value = moment().startOf(\"day\").format(\"YYYY-MM-DD\")\r\n        this.mealDateTo.value = moment().endOf(\"day\").format(\"YYYY-MM-DD\")\r\n        this.getMealsByDate()\r\n    }\r\n\r\n    byWeekButtonHandler() {\r\n        this.mealDateFrom.value = moment().subtract(7, \"day\").startOf(\"day\").format(\"YYYY-MM-DD\")\r\n        this.mealDateTo.value = moment().endOf(\"day\").format(\"YYYY-MM-DD\")\r\n        this.getMealsByDate()\r\n    }\r\n\r\n    byMonthButtonHandler() {\r\n        this.mealDateFrom.value = moment().subtract(30, \"day\").startOf(\"day\").format(\"YYYY-MM-DD\")\r\n        this.mealDateTo.value = moment().endOf(\"day\").format(\"YYYY-MM-DD\")\r\n        this.getMealsByDate()\r\n\r\n    }\r\n\r\n    byAllTimeButtonHandler(){\r\n        this.props.getMeals()\r\n    }\r\n\r\n    getMealsByDate() {\r\n   \r\n        let rangeFrom = this.mealDateFrom.value\r\n        let rangeTo = this.mealDateTo.value\r\n        if (rangeTo < rangeFrom) {\r\n            this.dateError.classList.add(\"alert\", \"alert-danger\")\r\n            this.dateError.innerText = \"Некорректно указан временной диапазон!\"\r\n        } else {\r\n            this.dateError.removeAttribute(\"class\")\r\n            this.dateError.innerText = \"\"\r\n            this.props.getMeals(rangeFrom, rangeTo)\r\n        }\r\n\r\n        this.props.getMeals(rangeFrom, rangeTo)\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <Row className=\"meal-date-control-wrapper\">\r\n            <Form  className=\"meal-date-control-form\">\r\n\r\n                <Form.Group>\r\n                    <Form.Label  style={{paddingRight: \"15px\"}}> Отобразить за:</Form.Label>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" variant=\"secondary\" onClick={this.byDayButtonHandler}>Сегодня</Button>\r\n                        <Button size=\"sm\" variant=\"secondary\" onClick={this.byWeekButtonHandler}>7 дней</Button>\r\n                        <Button size=\"sm\" variant=\"secondary\" onClick={this.byMonthButtonHandler}>30 дней</Button>\r\n                        <Button size=\"sm\" variant=\"secondary\" onClick={this.byAllTimeButtonHandler}>Все</Button>\r\n                    </ButtonGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"range-date-control\">\r\n\r\n                    <Form.Label style={{paddingRight: \"15px\"}}>Период c </Form.Label>\r\n\r\n                    <Form.Control\r\n                        className=\"w-25\"\r\n                        type=\"date\"\r\n                        ref={c => this.mealDateFrom = c}\r\n                        defaultValue={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={this.getMealsByDate}\r\n                    />\r\n\r\n                    <Form.Label  style={{paddingRight: \"15px\", paddingLeft: \"15px\"}}>по</Form.Label>\r\n\r\n                    <Form.Control\r\n                        className=\"w-25\"\r\n                        type=\"date\"\r\n                        ref={c => this.mealDateTo = c}\r\n                        defaultValue={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={this.getMealsByDate}\r\n                    />\r\n\r\n                </Form.Group>\r\n                <div  role=\"alert\" ref={c => this.dateError = c}></div>\r\n\r\n            </Form>\r\n\r\n</Row>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({})\r\nlet mapDispatchToProps = { getMeals }\r\nlet ConnectedMealDateControl = connect(mapStateToProps, mapDispatchToProps)(MealDateControl)\r\nexport default ConnectedMealDateControl","import React, { Component } from 'react';\r\nimport { Container, Row, Col,  Button, } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\"\r\nimport url from \"../config\"\r\nimport Navigation from \"../components/Navigation\"\r\nimport EditMealModal from \"../components/EditMealModal\"\r\nimport AddMealModal from \"../components/AddMealModal\"\r\nimport { getMeals } from \"../actions/mealActions\"\r\nimport { foodsDefault } from \"../actions/foodActions\"\r\nimport { editMealModalShow, editMealModalHide, addMealModalShow, addMealModalHide } from \"../actions/modalActions\"\r\nimport MealTable from \"../components/MealTable\"\r\nimport moment from \"moment\"\r\nimport MealDateControl from \"../components/MealDateControl\"\r\nimport DietChart from \"../components/DietChart\"\r\nimport { getChartData, chartDefault } from '../actions/chartDataActions';\r\n\r\n\r\nclass DietPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.timeButtonHandler = this.timeButtonHandler.bind(this)\r\n        this.handleRadio = this.handleRadio.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    async timeButtonHandler(param) {\r\n        this.dateFrom.value = moment().format(\"YYYY-MM-DD\")\r\n        this.dateFrom.disabled = false\r\n    }\r\n    async handleDelete(){\r\n        \r\n        await fetch(`${url}meal/${this.props.currentMeal.id}`, {\r\n            method: \"DELETE\",\r\n            credentials: \"include\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n        }).then(r => r)\r\n        await this.props.getMeals()\r\n        this.props.getChartData()\r\n    }\r\n\r\n    async handleRadio(event) {\r\n        await this.props.getMeals(event.target.value)\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let rangeFrom = moment().subtract(14, \"day\").startOf(\"day\").format(\"YYYY-MM-DD\")\r\n        let rangeTo = moment().endOf(\"day\").format(\"YYYY-MM-DD\")\r\n        await this.props.getMeals(rangeFrom, rangeTo)\r\n        await(this.props.getChartData())\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container fluid className=\"page-container\">\r\n                <AddMealModal />\r\n                {<EditMealModal />}\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        <Navigation history={this.props.history} />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <div className=\"diet-page-content-wrapper\"> \r\n                <Row >\r\n                    <Col sm={12} lg={12} md={12}>\r\n                    <MealDateControl />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col  sm={12} md={12} lg={12} className=\"meal-btn-group\">\r\n\r\n                        <Button className=\"add-edit-meal-btn\" onClick={this.props.addMealModalShow} variant=\"success\">Добавить </Button>\r\n                        <Button className=\"add-edit-meal-btn\" onClick={this.props.editMealModalShow} variant=\"info\">Редактировать</Button>\r\n                        <Button className=\"delete-meal-btn\" onClick={this.handleDelete} variant=\"danger\">Удалить </Button>\r\n\r\n                    </Col>\r\n                    <Col>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <MealTable data={this.props.meals}  ></MealTable>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        \r\n                        <DietChart />\r\n\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </Container>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    user: state.user,\r\n    mealTableHead: state.ui.thead.meal,\r\n    foodTableHead: state.ui.thead.food,\r\n    meals: state.data.meal.meals,\r\n    currentMeal: state.ui.modals.data.editModalState.initData,\r\n   \r\n})\r\nlet mapDispatchToProps = { getMeals, foodsDefault, editMealModalShow,\r\n                                            editMealModalHide, addMealModalShow, addMealModalHide,\r\n                                             getChartData, chartDefault }\r\n\r\nlet connectedDietPage = connect(mapStateToProps, mapDispatchToProps)(DietPage)\r\nexport default connectedDietPage","import React, { Component } from 'react';\r\nimport Navigation from \"../components/Navigation\";\r\nimport { Container, Row, Col,  Form,  Button } from 'react-bootstrap';\r\nimport url from \"../config\"\r\n\r\n\r\nclass RegistrationPage extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.validateRegistrationData = this.validateRegistrationData.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n        this.state = {\r\n            isError : false,\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    validateRegistrationData(registrationData ) {\r\n        \r\n        let loginCharArr = registrationData.login.split(\"\")\r\n        let loginIsValid;\r\n       loginCharArr.forEach(char => {\r\n            if (char.charCodeAt() < 48 || char.charCodeAt() > 122 ){\r\n              loginIsValid = false\r\n            } else {loginIsValid = true}            \r\n        })\r\n\r\n        if (loginIsValid === false || registrationData.login.length === 0){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное имя пользователя\"\r\n            })\r\n        } else if (registrationData.password.length < 6){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Пароль слишком короткий\"\r\n            })\r\n        } else  if (registrationData.password !== this.confirmationPassword.value){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Пароли не совпадают\"\r\n            })\r\n        } else  if (registrationData.age.length === 0 || registrationData.age < 5 || registrationData.age > 120 ){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное значение возраста\"\r\n            })\r\n        } else if (registrationData.weight.length === 0 || registrationData.weight < 20 || registrationData.weight > 300 ){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное значение веса\"\r\n            })\r\n        }  else if (registrationData.height.length === 0 || registrationData.height < 80 || registrationData.height > 300 ){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное значение роста\"\r\n            })\r\n        } else {this.setState({\r\n            isError:false,\r\n            errorMessage:\"\"\r\n        })}\r\n    }\r\n\r\n    async handleSubmit(){\r\n\r\n        let registrationData = {\r\n            login: this.login.value,\r\n                name: \"\",\r\n                surname: \"\",\r\n                password: this.password.value,\r\n                gender: this.gender.value, \r\n                age: this.age.value, \r\n                weight: this.weight.value,\r\n                height: this.height.value,\r\n                activityLevel: this.activityLevel.value\r\n        }\r\n    \r\n       await this.validateRegistrationData(registrationData)\r\n      if (this.state.isError === false){\r\n        await fetch(`${url}user`, {\r\n            method:\"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                login: this.login.value,\r\n                name: \"\",\r\n                surname: \"\",\r\n                password: this.password.value,\r\n                gender: this.gender.value, \r\n                age: this.age.value, \r\n                weight: this.weight.value,\r\n                height: this.height.value,\r\n                activityLevel: this.activityLevel.value\r\n\r\n            })\r\n        }).then(response => {\r\n            if (response.status === 404){ \r\n                this.setState({\r\n                    isError:true,\r\n                    errorMessage: \"Пользователь с таким именем уже существует\"\r\n                })\r\n            }\r\n        } )\r\n       if (!this.state.isError) {\r\n           this.props.history.push(\"/login\")\r\n       }\r\n    }\r\n            \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid className=\"page-container\">\r\n                <Navigation history={this.props.history} />\r\n                <Row className=\"profile-page-form-wrapper\">{\r\n                    <Form className=\"profile-page-form\">\r\n                   <Form.Group as={Row} controlId=\"formHorizontalUsername\">\r\n                    <Form.Label column sm={3} md={4} lg={4}>\r\n                      Имя пользователя\r\n                    </Form.Label>\r\n                    <Col sm={9} md={8} lg={8}>\r\n                      <Form.Control type=\"text\" placeholder=\"Имя пользователя, только латинские символы и цифры\" ref={c => this.login = c} defaultValue={this.props.login} />\r\n                    </Col>\r\n                  </Form.Group>\r\n                \r\n                  <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={3} md={4} lg={4}>\r\n                      Пароль\r\n                    </Form.Label>\r\n                    <Col sm={9} md={8} lg={8}>\r\n                      <Form.Control type=\"password\" placeholder=\"Пароль, минимум 6 символов\" ref={c => this.password = c} />\r\n                    </Col>\r\n                  </Form.Group>\r\n                  <Form.Group as={Row} controlId=\"formHorizontalConfirmationPassword\">\r\n                    <Form.Label column sm={3} md={4} lg={4}>\r\n                      Подтверждение пароля\r\n                    </Form.Label>\r\n                    <Col sm={9} md={8} lg={8}>\r\n                      <Form.Control type=\"password\" placeholder=\"Подтвердите пароль\" ref={c => this.confirmationPassword = c} />\r\n                    </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalGender\">\r\n                    <Form.Label column sm={3} md={4} lg={4}>\r\n                      Пол:\r\n                    </Form.Label>\r\n                    <Col sm={9} md={8} lg={8}>\r\n                      <Form.Control as=\"select\"  ref={c => this.gender = c}>\r\n                        <option value=\"male\">Мужской</option>\r\n                        <option value=\"female\" >Женский</option>\r\n                      </Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalAge\">\r\n                    <Form.Label column sm={3} md={4} lg={4}>\r\n                      Возраст:\r\n                    </Form.Label>\r\n                    <Col sm={9} md={8} lg={8}>\r\n                      <Form.Control type=\"number\" min=\"5\" max=\"120\"  ref={c => this.age = c}  />\r\n                    </Col>\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalWeight\">\r\n                  <Form.Label column sm={3} md={4} lg={4}>\r\n                    Вес, кг:\r\n                  </Form.Label>\r\n                  <Col sm={9} md={8} lg={8}>\r\n                    <Form.Control type=\"number\" min=\"20\" max=\"300\"  ref={c => this.weight = c}/>\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                  \r\n                <Form.Group as={Row} controlId=\"formHorizontalHeight\">\r\n                <Form.Label column sm={3} md={4} lg={4}>\r\n                  Рост, см:\r\n                </Form.Label>\r\n                <Col sm={9} md={8} lg={8}>\r\n                  <Form.Control type=\"number\" min=\"80\" max=\"300\" ref={c => this.height = c}  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row} controlId=\"formHorizontalActivityLevel\">\r\n                  <Form.Label column sm={3} md={4} lg={4}>\r\n                    Уровень физ. активности:\r\n                  </Form.Label>\r\n                  <Col sm={9} md={8} lg={8}>\r\n                    <Form.Control as=\"select\"  ref={c => this.activityLevel = c}>\r\n                        <option value=\"1\">1 - минимальная нагрузка(сидячая работа) </option> \r\n                        <option value=\"2\">2 - легкие тренировки 1-3 раза в неделю </option> \r\n                        <option value=\"3\">3 - тренировки 4-5 раз в неделю </option> \r\n                        <option value=\"4\">4 - интенсивные тренировки 4-5 раз в неделю </option> \r\n                        <option value=\"5\">5 - ежедневные тренировки </option> \r\n                        <option value=\"6\">6 - ежедневные интенсивные тренировки </option> \r\n                        <option value=\"7\">7 - интенсивные тренировки 2 раза в день </option> \r\n                    </Form.Control>\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                    <Button variant=\"primary\" onClick={this.handleSubmit}> Зарегистрироваться</Button>\r\n                    { this.state.isError === true ?\r\n                      (<div role=\"alert\" className=\"alert alert-danger profile-error\" ref={c => this.loginError = c}> {this.state.errorMessage}</div>)\r\n                       : null\r\n                 } \r\n                 { this.state.isSuccess === true ?\r\n                     (<div role=\"alert\" className=\"alert alert-success profile-succes\"  ref={c => this.profileUpdateMessage = c}> {this.state.successMessage}</div>)\r\n                      : null\r\n                } \r\n                  \r\n                </Form>}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegistrationPage","import React, { Component } from 'react';\r\nimport {  Container, Row, Col,  Form,  Button} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\"\r\nimport Navigation from \"../components/Navigation\"\r\nimport {login} from \"../actions/userActions\"\r\nimport url from \"../config\"\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.validateRegistrationData = this.validateRegistrationData.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n        this.state = {\r\n            isError : false,\r\n            errorMessage: \"\",\r\n            isSuccess: false,\r\n            successMessage: \"\"\r\n        }\r\n    }\r\n\r\n    validateRegistrationData(registrationData ) {\r\n        \r\n        let loginCharArr = registrationData.login.split(\"\")\r\n        let loginIsValid;\r\n       loginCharArr.forEach(char => {\r\n            if (char.charCodeAt() < 48 || char.charCodeAt() > 122 ){\r\n              loginIsValid = false\r\n            } else {loginIsValid = true}            \r\n        })\r\n\r\n        if (loginIsValid === false || registrationData.login.length === 0){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное имя пользователя\"\r\n            })\r\n        } else if (registrationData.password.length < 6){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Пароль слишком короткий\"\r\n            })\r\n        } else  if (registrationData.password !== this.confirmationPassword.value){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Пароли не совпадают\"\r\n            })\r\n        } else  if (registrationData.age.length === 0 || registrationData.age < 5 || registrationData.age > 120 ){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное значение возраста\"\r\n            })\r\n        } else if (registrationData.weight.length === 0 || registrationData.weight < 20 || registrationData.weight > 300 ){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное значение веса\"\r\n            })\r\n        }  else if (registrationData.height.length === 0 || registrationData.height < 80 || registrationData.height > 300 ){\r\n            this.setState({\r\n                isError: true,\r\n                errorMessage:\"Некорректное значение роста\"\r\n            })\r\n        } else {this.setState({\r\n            isError:false,\r\n            errorMessage:\"\"\r\n        })}\r\n    }\r\n\r\n    async handleSubmit(){\r\n\r\n        let registrationData = {\r\n            login: this.login.value,\r\n                name: \"\",\r\n                surname: \"\",\r\n                password: this.password.value,\r\n                gender: this.gender.value, \r\n                age: this.age.value, \r\n                weight: this.weight.value,\r\n                height: this.height.value,\r\n                activityLevel: this.activityLevel.value\r\n        }\r\n    \r\n       await this.validateRegistrationData(registrationData)\r\n\r\n    if (this.state.isError === false){\r\n        await fetch(`${url}user/${this.props.user.id}`, {\r\n            method:\"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                login: this.login.value,\r\n                name: \"\",\r\n                surname: \"\",\r\n                password: this.password.value,\r\n                gender: this.gender.value, \r\n                age: this.age.value, \r\n                weight: this.weight.value,\r\n                height: this.height.value,\r\n                activityLevel: this.activityLevel.value\r\n\r\n            })\r\n        }).then(response => {\r\n            if (response.status === 403){ \r\n                this.setState({\r\n                    isError:true,\r\n                    errorMessage: \"Доступ запрещен\"\r\n                })\r\n            }\r\n        } )\r\n       if (!this.state.isError) {\r\n           this.setState({\r\n               isSuccess: true,\r\n               successMessage: \"Данные профиля успешно обновлены\"\r\n           }) \r\n           await this.props.login(registrationData.login, registrationData.password)\r\n           setTimeout(() => {\r\n            this.setState({\r\n                isSuccess: false,\r\n                successMessage: \"\"\r\n            })\r\n           }, 3000)\r\n       }\r\n    }\r\n            \r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <Container fluid className=\"page-container\">\r\n            <Navigation history={this.props.history} />\r\n            <Row className=\"profile-page-form-wrapper\">\r\n                <Form className=\"profile-page-form\">\r\n               <Form.Group as={Row}  className=\"profile-page-form-group\">\r\n                <Form.Label column sm={3} md={4} lg={4}>\r\n                  Имя пользователя:\r\n                </Form.Label>\r\n                <Col sm={9} md={8} lg={8}>\r\n                  <Form.Control plaintext readOnly type=\"text\"  ref={c => this.login = c} defaultValue={this.props.user.login} />\r\n                </Col>\r\n              </Form.Group>\r\n        \r\n              <Form.Group as={Row} className=\"profile-page-form-group\">\r\n                <Form.Label column sm={3} md={4} lg={4}>\r\n                  Пароль:\r\n                </Form.Label>\r\n                <Col sm={9} md={8} lg={8}>\r\n                  <Form.Control type=\"password\" placeholder=\"Пароль, минимум 6 символов\" ref={c => this.password = c} />\r\n                </Col>\r\n              </Form.Group>\r\n        \r\n              <Form.Group as={Row} className=\"profile-page-form-group\">\r\n                <Form.Label column sm={3} md={4} lg={4}>\r\n                  Подтверждение пароля:\r\n                </Form.Label>\r\n                <Col sm={9} md={8} lg={8}>\r\n                  <Form.Control type=\"password\" placeholder=\"Подтвердите пароль\" ref={c => this.confirmationPassword = c} />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row} className=\"profile-page-form-group\">\r\n                <Form.Label column sm={3} md={4} lg={4}>\r\n                  Пол:\r\n                </Form.Label>\r\n                <Col sm={9} md={8} lg={8}>\r\n                  <Form.Control as=\"select\"  ref={c => this.gender = c} defaultValue={this.props.user.gender}>\r\n                    <option value=\"male\">Мужской</option>\r\n                    <option value=\"female\" >Женский</option>\r\n                  </Form.Control>\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row} className=\"profile-page-form-group\">\r\n                <Form.Label column sm={3} md={4} lg={4}>\r\n                  Возраст:\r\n                </Form.Label>\r\n                <Col sm={9} md={8} lg={8}>\r\n                  <Form.Control type=\"number\" min=\"5\" max=\"120\"  ref={c => this.age = c} defaultValue={this.props.user.age} />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n\r\n              <Form.Group as={Row} className=\"profile-page-form-group\">\r\n              <Form.Label column sm={3} md={4} lg={4}>\r\n                Вес, кг:\r\n              </Form.Label>\r\n              <Col sm={9} md={8} lg={8}>\r\n                <Form.Control type=\"number\" min=\"20\" max=\"300\"  ref={c => this.weight = c} defaultValue={this.props.user.weight}/>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n              \r\n            <Form.Group as={Row} className=\"profile-page-form-group\">\r\n            <Form.Label column sm={3} md={4} lg={4}>\r\n              Рост, см:\r\n            </Form.Label>\r\n            <Col sm={9} md={8} lg={8}>\r\n              <Form.Control type=\"number\" min=\"80\" max=\"300\" ref={c => this.height = c} defaultValue={this.props.user.height} />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} className=\"profile-page-form-group\">\r\n              <Form.Label column sm={3} md={4} lg={4}>\r\n                Уровень физ. активности:\r\n              </Form.Label>\r\n              <Col sm={9} md={8} lg={8}>\r\n                <Form.Control as=\"select\"  ref={c => this.activityLevel = c} defaultValue={this.props.user.activityLevel}>\r\n                    <option value=\"1\">1 - минимальная нагрузка(сидячая работа) </option> \r\n                    <option value=\"2\">2 - легкие тренировки 1-3 раза в неделю </option> \r\n                    <option value=\"3\">3 - тренировки 4-5 раз в неделю </option> \r\n                    <option value=\"4\">4 - интенсивные тренировки 4-5 раз в неделю </option> \r\n                    <option value=\"5\">5 - ежедневные тренировки </option> \r\n                    <option value=\"6\">6 - ежедневные интенсивные тренировки </option> \r\n                    <option value=\"7\">7 - интенсивные тренировки 2 раза в день </option> \r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n            \r\n                <Button variant=\"primary\" onClick={this.handleSubmit}> Обновить</Button>\r\n                { this.state.isError === true ?\r\n                     (<div role=\"alert\" className=\"alert alert-danger profile-error\"  ref={c => this.loginError = c}> {this.state.errorMessage}</div>)\r\n                      : null\r\n                } \r\n                { this.state.isSuccess === true ?\r\n                    (<div role=\"alert\" className=\"alert alert-success profile-success\"  ref={c => this.profileUpdateMessage = c}> {this.state.successMessage}</div>)\r\n                     : null\r\n               } \r\n\r\n              \r\n            </Form>\r\n            </Row>\r\n        </Container>\r\n        )\r\n            }\r\n}\r\n\r\nlet mapStateToProps = state => ({user: state.user.user})\r\nlet mapDispatchToProps = {login} \r\nlet ConnectedProfilePage = connect(mapStateToProps, mapDispatchToProps)(ProfilePage)\r\n\r\nexport default ConnectedProfilePage","import React, { Component } from 'react';\r\nimport { Container, Row, Col,  Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\"\r\nimport { getFoodListData, foodListDefault } from \"../actions/foodListActions\"\r\nimport { BootstrapTable, TableHeaderColumn, SearchField } from 'react-bootstrap-table'\r\nimport Navigation from \"../components/Navigation\"\r\nimport url from \"../config\"\r\n\r\nclass FoodListPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleSortFilterInput = this.handleSortFilterInput.bind(this)\r\n        this.state = {\r\n            foodCategoryList: []\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await this.props.getFoodListData()\r\n        let categoryList = await fetch(`${url}category`).then(r => r.json()).then(arr => arr.map((category) => category.category))\r\n        this.setState({\r\n            foodCategoryList: categoryList\r\n        })\r\n        \r\n    }\r\n\r\n    createCustomSearchField = (props) => {\r\n        return (\r\n            <SearchField\r\n                className=\"seach-food-list\"\r\n                placeholder={\"Поиск\"} />\r\n        );\r\n    }\r\n\r\n    async handleSortFilterInput(){\r\n        await this.props.getFoodListData(this.category.value, this.foodSort.value)\r\n    }\r\n    render() {\r\n\r\n        const selectRowProp = {\r\n            mode: 'radio',\r\n            bgColor: '#A9E2F3',\r\n\r\n            hideSelectColumn: true,\r\n            clickToSelect: true,\r\n            clickToExpand: false,\r\n            onSelect: this.handleRowSelect,\r\n\r\n        };\r\n\r\n        const options = {\r\n            expandRowBgColor: \"#F8E6E0\",\r\n            onRowClick: this.onRowClick,\r\n            onRowDoubleClick: this.onRowDoubleClick,\r\n            searchPosition: \"left\",\r\n            searchField: this.createCustomSearchField\r\n        }\r\n        \r\n        return (\r\n            <Container fluid className=\"page-container\">\r\n                <Navigation history={this.props.history} />\r\n\r\n                <div className=\"food-list-content-wrapper\">\r\n\r\n                    <Form className=\"food-list-form\">\r\n                        <Form.Group as={Row} className=\"food-list-form-category\">\r\n                            <Form.Label column sm={3} md={4} lg={4}>\r\n                                Категория:\r\n                             </Form.Label>\r\n                            <Col sm={9} md={8} lg={8}>\r\n                                <Form.Control as=\"select\"  ref={c => this.category = c} onChange={this.handleSortFilterInput}>\r\n                                    <option value=\"all\">Все </option>\r\n                                    {this.state.foodCategoryList.map((category, index) => {\r\n                                        return (<option key={index} value={category}>{category}</option>)\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} className=\"food-list-form-sort\">\r\n                            <Form.Label column sm={4} md={4} lg={4}>\r\n                               Сортировать по:\r\n                             </Form.Label>\r\n                            <Col sm={8} md={8} lg={8}>\r\n                                <Form.Control as=\"select\" ref={c => this.foodSort = c} onChange={this.handleSortFilterInput}>\r\n                                    <option value=\"name\">Имя</option> \r\n                                    <option value=\"protein\">Содержание белка </option> \r\n                                    <option value=\"fat\">Содержание жиров </option> \r\n                                    <option value=\"carbohydrate\">Содержание углеводов </option> \r\n                                    <option value=\"calories\">Калорийность</option> \r\n                                    <option value=\"category\">Категория </option> \r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n\r\n                    <BootstrapTable data={this.props.foodList} version=\"4\" selectRow={selectRowProp} options={options}\r\n                        hover\r\n                        condensed\r\n                        search={true}\r\n                        multiColumnSearch={true}\r\n                        pagination\r\n                    >\r\n\r\n                        <TableHeaderColumn isKey dataField=\"name\" width=\"150px\" dataAlign=\"center\" columnTitle>Имя</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"protein\" width=\"10%\" dataAlign=\"center\">Белки, г.</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"fat\" width=\"10%\" dataAlign=\"center\">Жиры, г.</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"carbohydrate\" width=\"10%\" dataAlign=\"center\">Углеводы, г.</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"calories\" width=\"10%\" dataAlign=\"center\">Калории</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"category\" width=\"150px\" dataAlign=\"center\">Категория</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                     <div className=\"food-list-disclaimer\"><p>* Данные на 100г. продукта</p></div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({ foodList: state.data.foodList.foodList })\r\nlet mapDispatchToProps = { getFoodListData, foodListDefault }\r\nlet ConnnectedFoodListPage = connect(mapStateToProps, mapDispatchToProps)(FoodListPage)\r\nexport default ConnnectedFoodListPage","import url from \"../config\"\r\n\r\n\r\n\r\nlet foodListDefault = () => ({ type: \"FOOD_LIST_DEFAULT\" })\r\nlet foodListPending = () => ({ type: \"FOOD_LIST_PENDING\" })\r\nlet foodListResolved = chartData => ({ type: \"FOOD_LIST_RESOLVED\", payload: chartData})\r\nlet foodListError = () => ({ type: \"FOOD_LIST_ERROR\" })\r\n\r\n\r\nlet getFoodListData = (category=\"all\", sort=\"name\") =>\r\n    async dispatch => {\r\n        await dispatch(foodListPending())\r\n        try {\r\n            let result = await fetch(`${url}foods?category=${category}&sort=${sort}`, {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(r => r.json())\r\n            await dispatch(foodListResolved(result))\r\n        } catch (e) {\r\n            await dispatch(foodListError())\r\n        }\r\n    }\r\n\r\n  \r\n\r\nexport { getFoodListData, foodListDefault }","import React, { Component } from 'react';\r\nimport { Router, Route, } from 'react-router-dom';\r\nimport PrivateRoute from \"react-private-route\"\r\nimport { connect } from 'react-redux';\r\nimport WelcomePage from \"../pages/WelcomePage\"\r\nimport LoginPage from \"../pages/LoginPage\"\r\nimport DietPage from '../pages/DietPage.js';\r\nimport RegistrationPage  from \"../pages/RegistrationPage\"\r\nimport ProfilePage from \"../pages/ProfilePage\"\r\nimport FoodListPage from '../pages/FoodListPage';\r\n\r\nclass CustomRouter extends Component {\r\n \r\n    \r\n    render(){\r\n       \r\n        return(\r\n\r\n            <Router history={this.props.history}>\r\n            <div>\r\n              <Route path=\"/registration\" component={RegistrationPage} exact />\r\n              <PrivateRoute path=\"/profile\" component={ProfilePage} isAuthenticated={this.props.status === \"logged_in\"}  redirect=\"/login\"  exact />\r\n              <Route path=\"/login\" component={LoginPage} exact />\r\n              <PrivateRoute path=\"/diet\" component={DietPage} exact  isAuthenticated={this.props.status === \"logged_in\"}  redirect=\"/login\" />\r\n              <PrivateRoute path=\"/food\" component={FoodListPage} isAuthenticated={this.props.status === \"logged_in\"}  redirect=\"/login\" exact />\r\n              <Route path=\"/\" component={WelcomePage} exact />\r\n            </div>\r\n        </Router>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({user: state.user.user, status: state.user.status})\r\nlet ConnectedACustomRouter = connect(mapStateToProps)(CustomRouter)\r\n\r\nexport default ConnectedACustomRouter","import React, { Component } from 'react';\n\nimport createHistory from \"history/createBrowserHistory\";\n\nimport { Provider} from 'react-redux';\nimport store from \"./store.js\"\n\nimport CustomRouter from \"./components/CustomRouter\"\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <CustomRouter history={createHistory()} />\n      </Provider>\n    );\n  }\n}\n\n\n\nexport default  App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}